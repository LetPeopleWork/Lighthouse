name: Generate and Verify License
# Include the unique GitHub run number both in the run name and passed to the script as the license number
run-name: "License #${{ github.run_number }}"
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Name'
        required: false
        default: 'Trial User'
      email:
        description: 'Email'
        required: false
        default: 'trial@lighthouse.com'
      organization:
        description: 'Organization'
        required: false
        default: 'Trial Organization'
      expiry:
        description: 'Expiry Date (YYYY-MM-DD) - defaults to 2 weeks from now'
        required: false

jobs:
  generate-and-verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set default expiry date (2 weeks from now)
        id: set-expiry
        run: |
          if [ -z "${{ github.event.inputs.expiry }}" ]; then
            EXPIRY_DATE=$(date -d "+14 days" +%Y-%m-%d)
          else
            EXPIRY_DATE="${{ github.event.inputs.expiry }}"
          fi
          echo "expiry_date=$EXPIRY_DATE" >> $GITHUB_OUTPUT

      - name: Set default values
        id: set-defaults
        run: |
          NAME="${{ github.event.inputs.name }}"
          EMAIL="${{ github.event.inputs.email }}"
          ORG="${{ github.event.inputs.organization }}"
          
          if [ -z "$NAME" ]; then
            NAME="Trial User"
          fi
          if [ -z "$EMAIL" ]; then
            EMAIL="trial@lighthouse.com"
          fi
          if [ -z "$ORG" ]; then
            ORG="Trial Organization"
          fi
          
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "email=$EMAIL" >> $GITHUB_OUTPUT
          echo "organization=$ORG" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cryptography

      - name: Write private key to file
        run: echo "${{ secrets.LIGHTHOUSE_LICENSE_PRIVATE_KEY }}" > private_key.pem

      - name: Generate license
        run: |
          python Scripts/generate_license.py private_key.pem license.json "${{ github.run_number }}" "${{ steps.set-defaults.outputs.name }}" "${{ steps.set-defaults.outputs.email }}" "${{ steps.set-defaults.outputs.organization }}" "${{ steps.set-expiry.outputs.expiry_date }}"

      - name: Write public key to file
        run: echo "${{ secrets.LIGHTHOUSE_LICENSE_PUBLIC_KEY }}" > public_key.pem

      - name: Verify license
        run: python Scripts/verify_license.py public_key.pem license.json

      - name: Create license zip file
        run: |
          zip lighthouse-license.zip license.json
          ls -la lighthouse-license.zip

      - name: Upload license as artifact
        uses: actions/upload-artifact@v4
        with:
          name: license
          path: lighthouse-license.zip

      - name: Send license via email
        run: python Scripts/send_license_email.py
        env:
          MAILGUN_SMTP_USERNAME: ${{ secrets.MAILGUN_SMTP_USERNAME }}
          MAILGUN_SMTP_PASSWORD: ${{ secrets.MAILGUN_SMTP_PASSWORD }}
          RECIPIENT_NAME: ${{ steps.set-defaults.outputs.name }}
          RECIPIENT_EMAIL: ${{ steps.set-defaults.outputs.email }}
          ORGANIZATION: ${{ steps.set-defaults.outputs.organization }}